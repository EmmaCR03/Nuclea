@page
@model Web.Pages.Eventos.IndexModel
@{
    ViewData["Title"] = "Eventos";
}

<h1 class="display-4 text-center text-primary mb-5 animate__animated animate__fadeIn">Listado de Eventos</h1>

<div class="container">
    @if (Model.eventos != null && Model.eventos.Any())
    {
        var eventosPorTipo = Model.eventos.GroupBy(e => e.TipoEvento);

        foreach (var grupo in eventosPorTipo)
        {
            var carouselId = $"carousel-{grupo.Key.Replace(" ", "-")}";
            <h2 class="text-center text-secondary mt-5 mb-4 border-bottom pb-2">
                <i class="bi bi-bookmark-fill me-2 text-primary"></i>@grupo.Key
            </h2>

            <div class="event-carousel mb-5" id="@carouselId">
                @foreach (var evento in grupo)
                {
                    <div class="event-card-container">
                        <div class="card p-4 shadow-lg border-0 rounded-3 event-card h-100">
                            @if (!string.IsNullOrWhiteSpace(evento.ImagenUrl))
                            {
                                <img src="@evento.ImagenUrl" alt="Imagen del evento" class="card-img-top rounded-3 mb-3" style="height: 250px; object-fit: contain;" />
                            }
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title text-center text-primary mb-3">
                                    <strong>@evento.nombreEvento</strong>
                                </h5>
                                <h6 class="card-subtitle mb-3 text-muted text-center">
                                    <i class="bi bi-calendar-event me-2"></i>@evento.fecha.ToString("dd/MM/yyyy")
                                </h6>
                                <div class="d-flex justify-content-center mb-3">
                                    <h6 class="text-success me-4">
                                        <strong>Inicio:</strong> @evento.horaInicio.ToString(@"hh\:mm")
                                    </h6>
                                    <h6 class="text-danger">
                                        <strong>Fin:</strong> @evento.horaFin.ToString(@"hh\:mm")
                                    </h6>
                                </div>
                                <p class="card-text text-center mb-2"><strong>Ubicación:</strong> @evento.Ubicacion</p>
                                <p class="card-text text-center mb-2"><strong>Descripción:</strong> @evento.descripcion</p>
                                <p class="card-text text-center mb-3"><strong>Promotora:</strong> @evento.Negocio</p>
                                <p class="card-text text-center mb-3"><strong>Patrocinador:</strong> @evento.Servicios</p>

                                <a type="button" class="btn btn-outline-primary w-100 mt-auto" asp-page="./Detalle" asp-route-id="@evento.IdEvento">
                                    <i class="bi bi-eye me-2"></i> Ver Detalle
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    }
    else
    {
        <p class="text-center text-muted">No hay eventos disponibles en este momento.</p>
    }
</div>

<style>
    .event-card {
        background: linear-gradient(135deg, #ffffff, #f9fafb);
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        height: 100%;
    }

        .event-card:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            background: linear-gradient(135deg, #ffffff, #ffffff);
        }

    .card-img-top {
        width: 100%;
        height: auto;
        border-bottom: 1px solid #eee;
    }

    .card-body {
        padding: 2rem;
    }

    .card-title {
        font-size: 1.3rem;
        color: #1e3a8a;
        background-color: rgba(0, 123, 255, 0.05);
        padding: 8px;
        border-radius: 5px;
    }

    .btn-outline-primary {
        border-color: #007bff;
        color: #007bff;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: white;
        }

    .bi {
        font-size: 1.3rem;
    }

    .animate__animated {
        animation-duration: 1.5s;
    }

    .animate__fadeIn {
        animation-name: fadeIn;
    }

    /* Carousel Styles */
    .event-carousel {
        display: flex;
        overflow-x: auto;
        gap: 1rem;
        scroll-behavior: smooth;
        padding-bottom: 1rem;
        scroll-snap-type: x mandatory;
        white-space: nowrap;
    }

    .event-card-container {
        flex: 0 0 auto;
        width: 380px;
        scroll-snap-align: start;
    }

    .event-carousel::-webkit-scrollbar {
        height: 10px;
    }

    .event-carousel::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    .event-carousel::-webkit-scrollbar-thumb {
        background: #007bff;
        border-radius: 10px;
    }

        .event-carousel::-webkit-scrollbar-thumb:hover {
            background: #0056b3;
        }
</style>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const carousels = document.querySelectorAll('.event-carousel');

        carousels.forEach(carousel => {
            let scrollSpeed = 1.2; // 👈 Velocidad más fluida y elegante
            let isUserScrolling = false;

            // Pausa el scroll automático si el usuario interactúa
            carousel.addEventListener('mouseenter', () => isUserScrolling = true);
            carousel.addEventListener('mouseleave', () => isUserScrolling = false);
            carousel.addEventListener('mousedown', () => isUserScrolling = true);
            carousel.addEventListener('mouseup', () => isUserScrolling = false);
            carousel.addEventListener('touchstart', () => isUserScrolling = true);
            carousel.addEventListener('touchend', () => isUserScrolling = false);

            function autoScroll() {
                if (!isUserScrolling) {
                    // Scroll automático
                    carousel.scrollLeft += scrollSpeed;

                    // Si llegó al final, vuelve al inicio suavemente
                    if (carousel.scrollLeft + carousel.clientWidth >= carousel.scrollWidth - 1) {
                        carousel.scrollTo({ left: 0, behavior: 'smooth' });
                    }
                }

                requestAnimationFrame(autoScroll);
            }

            requestAnimationFrame(autoScroll);
        });
    });
</script>


